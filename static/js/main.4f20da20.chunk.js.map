{"version":3,"sources":["components/TodoList/TodoList.tsx","api/api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoList","setSelectedUserId","todos","className","map","todo","classNames","TodoList__item","completed","type","checked","title","button","onClick","userId","id","API_URL","getTodosByStatus","status","fetch","then","response","json","CurrentUser","state","selectedUser","this","loadUsers","prevProps","props","a","setState","name","email","phone","clearSelectedUser","React","Component","App","selectedUserId","query","setStatus","event","target","value","setQuery","getTodosByQuery","queryLoverCase","toLowerCase","filter","includes","loadTodosByStatus","_","prevState","visibleTodos","placeholder","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f20da20.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\nimport classNames from 'classnames';\nimport React from 'react';\nimport './TodoList.scss';\n\ntype Props = {\n  setSelectedUserId: (userId: number) => void,\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ setSelectedUserId, todos }) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {todos.map(todo => (\n          <li\n            className={classNames({\n              TodoList__item: true,\n              'TodoList__item--unchecked': !todo.completed,\n              'TodoList__item--checked': todo.completed,\n            })}\n            key={todo.id}\n          >\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={todo.completed}\n              />\n              <p>{todo.title}</p>\n            </label>\n\n            <button\n              className={classNames({\n                button: true,\n                'TodoList__user-button': true,\n                'TodoList__user-button--selected': todo.completed,\n              })}\n              type=\"button\"\n              onClick={() => setSelectedUserId(todo.userId)}\n            >\n              {`User #${todo.userId}`}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n","const API_URL = 'https://mate.academy/students-api';\n\nexport function getTodos(): Promise<Todo[]> {\n  return fetch(`${API_URL}/todos`)\n    .then(response => response.json());\n}\n\nexport function getUserById(userId: number): Promise<User> {\n  return fetch(`${API_URL}/users/${userId}`)\n    .then(response => response.json());\n}\n\nexport function getTodosByStatus(status: string): Promise<Todo[]> {\n  if (status === 'true' || status === 'false') {\n    return fetch(`${API_URL}/todos?completed=${status}`)\n      .then(response => response.json());\n  }\n\n  return getTodos();\n}\n","import React from 'react';\nimport './CurrentUser.scss';\nimport { getUserById } from '../../api/api';\n\ntype Props = {\n  userId: number,\n  clearSelectedUser: () => void,\n};\n\ntype State = {\n  selectedUser: User | null,\n};\n\nexport class CurrentUser extends React.Component<Props, State> {\n  state: State = {\n    selectedUser: null,\n  };\n\n  componentDidMount() {\n    this.loadUsers();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.userId !== prevProps.userId) {\n      this.loadUsers();\n    }\n  }\n\n  async loadUsers() {\n    const selectedUser = await getUserById(this.props.userId);\n\n    this.setState({ selectedUser });\n  }\n\n  render() {\n    const { selectedUser } = this.state;\n\n    return (\n      <>\n        {selectedUser && (\n          <div className=\"CurrentUser\">\n            <h2 className=\"CurrentUser__title\">\n              <span>{`Selected user: ${selectedUser.id}`}</span>\n            </h2>\n            <h3 className=\"CurrentUser__name\">{selectedUser.name}</h3>\n            <p className=\"CurrentUser__email\">{selectedUser.email}</p>\n            <p className=\"CurrentUser__phone\">{selectedUser.phone}</p>\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={this.props.clearSelectedUser}\n            >\n              Clear\n            </button>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodosByStatus } from './api/api';\n\ninterface State {\n  selectedUserId: number,\n  status: string,\n  todos: Todo[],\n  query: string,\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedUserId: 0,\n    status: 'all',\n    todos: [],\n    query: '',\n  };\n\n  componentDidMount() {\n    this.loadTodosByStatus();\n  }\n\n  componentDidUpdate(_: {}, prevState: State) {\n    if (this.state.status !== prevState.status) {\n      this.loadTodosByStatus();\n    }\n  }\n\n  setSelectedUserId = (userId: number) => {\n    this.setState({ selectedUserId: userId });\n  };\n\n  setStatus = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({\n      status: event.target.value,\n    });\n  };\n\n  setQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ query: event.target.value });\n  };\n\n  getTodosByQuery = () => {\n    const { todos, query } = this.state;\n    const queryLoverCase = query.toLowerCase();\n\n    return todos.filter(todo => (\n      todo.title.toLowerCase().includes(queryLoverCase)));\n  };\n\n  clearSelectedUser = () => {\n    this.setState({ selectedUserId: 0 });\n  };\n\n  async loadTodosByStatus() {\n    const { status } = this.state;\n    const todos = await getTodosByStatus(status);\n\n    this.setState({ todos });\n  }\n\n  render() {\n    const {\n      selectedUserId,\n      status,\n      query,\n    } = this.state;\n\n    const visibleTodos = this.getTodosByQuery();\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <form className=\"ui form\">\n            <div className=\"two fields\">\n              <div className=\"field\">\n                <label>Type search word</label>\n                <input\n                  type=\"text\"\n                  id=\"search-query\"\n                  placeholder=\"Type search word\"\n                  value={query}\n                  onChange={this.setQuery}\n                />\n              </div>\n              <div className=\"field\">\n                <label>Choose status</label>\n                <select\n                  className=\"ui fluid dropdown\"\n                  value={status}\n                  onChange={this.setStatus}\n                >\n                  <option value=\"all\">All</option>\n                  <option value=\"false\">Active</option>\n                  <option value=\"true\">Completed</option>\n                </select>\n              </div>\n            </div>\n          </form>\n          <TodoList\n            setSelectedUserId={this.setSelectedUserId}\n            todos={visibleTodos}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearSelectedUser={this.clearSelectedUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}